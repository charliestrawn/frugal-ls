name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Run tests
      run: go test ./...
    
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Build for different platforms
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/frugal-ls-linux-amd64 ./cmd/frugal-ls
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/frugal-ls-linux-arm64 ./cmd/frugal-ls
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/frugal-ls-darwin-amd64 ./cmd/frugal-ls
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/frugal-ls-darwin-arm64 ./cmd/frugal-ls
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/frugal-ls-windows-amd64.exe ./cmd/frugal-ls
    
    - name: Setup Node.js for VS Code extension
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
    
    - name: Build VS Code extension
      run: |
        cd vscode-extension
        npm ci
        npm run compile
        npm install -g vsce
        vsce package --no-dependencies
        mv *.vsix ../dist/
    
    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
    
    - name: Extract release notes
      id: extract-notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract release notes from CHANGELOG.md if it exists
        if [ -f CHANGELOG.md ]; then
          sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | head -n -1 | tail -n +2 > release-notes.txt
        else
          echo "Release $VERSION" > release-notes.txt
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*
        body_path: release-notes.txt
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}